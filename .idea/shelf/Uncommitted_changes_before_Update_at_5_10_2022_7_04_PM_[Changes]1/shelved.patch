Index: Tools.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.io.*;\r\nimport java.util.Scanner;\r\n\r\nclass Tools {\r\n\r\n\r\n    //the Colors of gay\r\n    public static final String GO_BACK = \"\\\"\\\\u001B[A\\\"\";\r\n    public static final String SCREEN_CLEAR = \"\\033[H\\033[2J\";\r\n    public static final String RESET = \"\\u001B[0m\";\r\n    public static final String BLACK = \"\\u001B[30m\";\r\n    public static final String RED = \"\\u001B[31m\";\r\n    public static final String GREEN = \"\\u001B[32m\";\r\n    public static final String YELLOW = \"\\u001B[33m\";\r\n    public static final String BLUE = \"\\u001B[34m\";\r\n    public static final String PURPLE = \"\\u001B[35m\";\r\n    public static final String CYAN = \"\\u001B[36m\";\r\n    public static final String WHITE = \"\\u001B[37m\";\r\n    public boolean isGay = false;\r\n    int tSpeed;\r\n    String[] colors = new String[]{ RED , GREEN , BLUE , PURPLE , CYAN };\r\n    Scanner scanner = new Scanner( System.in );\r\n\r\n    public static void Edit ( String filePath , Object[] arr ) {\r\n        File fileToBeModified = new File( filePath );\r\n        FileWriter writer = null;\r\n        try {\r\n            writer = new FileWriter( fileToBeModified );\r\n            for ( int i = 0; i < arr.length; i++ ) {\r\n                String print = arr[ i ].toString( ) + \"\\n\";\r\n                writer.write( print );\r\n            }\r\n\r\n        } catch ( IOException e ) {\r\n            e.printStackTrace( );\r\n        } finally {\r\n            try {\r\n                //Closing the resources\r\n                assert writer != null;\r\n                writer.close( );\r\n            } catch ( IOException e ) {\r\n                e.printStackTrace( );\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @return array of saved vars\r\n     */\r\n    public static Object[] Read ( String file ) {\r\n\r\n        try {\r\n            File txt = new File( file );\r\n            FileReader fileRead = new FileReader( txt );\r\n            BufferedReader reader = new BufferedReader( fileRead );\r\n            Object[] arr = new Object[ 10 ];\r\n\r\n            for ( int r = 0; r < arr.length; r++ ) {\r\n                Object var = reader.readLine( );\r\n                arr[ r ] = var;\r\n\r\n            }\r\n            reader.close( );\r\n            System.out.println( \"READ DONE\" );\r\n            return arr;\r\n        } catch ( IOException e ) {\r\n            e.printStackTrace( );\r\n            return new Object[ 10 ];\r\n        }\r\n\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    public void setTSpeed ( int num ) {\r\n        tSpeed = num;\r\n    }\r\n\r\n    /**\r\n     * @return RANDOM NUMBER LETS GO\r\n     */\r\n    public int random ( int low , int high ) {\r\n        int range = high - low + 1;\r\n        return ( int ) ( Math.random( ) * range ) + low;\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    //print method\r\n    public void sPrintln ( String str ) {\r\n        //if 2069 is talking BLUE\r\n        if ( isGay ) {\r\n            for ( int i = 0; i < str.length( ); i++ ) {\r\n                System.out.print( str.charAt( i ) );\r\n                System.out.print( colors[ i % colors.length ] );\r\n                wait( tSpeed );\r\n            }\r\n        } else if ( str.contains( \"2069:\" ) ) {\r\n            for ( int i = 0; i < str.length( ); i++ ) {\r\n                System.out.print( BLUE + str.charAt( i ) );\r\n                wait( tSpeed );\r\n            }\r\n        }\r\n\r\n        //if 2077 is talking CYAN\r\n        else if ( str.contains( \"2077:\" ) ) {\r\n            for ( int i = 0; i < str.length( ); i++ ) {\r\n                System.out.print( CYAN + str.charAt( i ) );\r\n                wait( tSpeed );\r\n            }\r\n\r\n        }\r\n        //Tech giant talking RED\r\n        else if ( str.contains( \"Mark Zuckerberg:\" ) || str.contains( \"Elon musk:\" ) || str.contains( \"Bill gates:\" ) || str.contains( \"Jeff bezos:\" ) ) {\r\n            for ( int i = 0; i < str.length( ); i++ ) {\r\n                System.out.print( RED + str.charAt( i ) );\r\n                wait( tSpeed );\r\n            }\r\n        }\r\n        //if sounds then\r\n        else if ( str.contains( \"*\" ) ) {\r\n            for ( int i = 0; i < str.length( ); i++ ) {\r\n                System.out.print( GREEN + str.charAt( i ) );\r\n                wait( tSpeed );\r\n            }\r\n        }\r\n        //??? talks\r\n        else if ( str.contains( \"???:\" ) ) {\r\n            for ( int i = 0; i < str.length( ); i++ ) {\r\n                if ( random( 0 , 15 ) == 10 ) {\r\n                    System.out.print( ( char ) ( random( 0 , 256 ) ) );\r\n                } else {\r\n                    System.out.print( PURPLE + str.charAt( i ) );\r\n                }\r\n                wait( tSpeed );\r\n            }\r\n        }\r\n        //Anything else\r\n        else {\r\n            for ( int i = 0; i < str.length( ); i++ ) {\r\n                System.out.print( str.charAt( i ) );\r\n                wait( tSpeed );\r\n            }\r\n        }\r\n        System.out.println( );\r\n        System.out.println( RESET );\r\n        System.out.println( \"> enter <\" );\r\n        scanner.nextLine( );\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    public void wait ( int time ) {\r\n        long startTime = System.currentTimeMillis( );\r\n        while ( startTime + time > System.currentTimeMillis( ) ) ;\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    public void sPrint ( String str ) {\r\n        for ( int i = 0; i < str.length( ); i++ ) {\r\n            System.out.print( str.charAt( i ) );\r\n            wait( tSpeed );\r\n        }\r\n        System.out.println( );\r\n\r\n\r\n    }\r\n\r\n    /**\r\n     * @return Is that string castable\r\n     */\r\n    public boolean strIsInt ( String string ) {\r\n        try {\r\n            int value = Integer.parseInt( string );\r\n            return true;\r\n        } catch ( NumberFormatException e ) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns false on \"Yes, yes, y, or Y\"\r\n     */\r\n    public boolean skip ( ) {\r\n        sPrint( \"Skip cutscene?   \" );\r\n        String skip = scanner.nextLine( );\r\n        boolean yesSkip = skip.equals( \"yes\" ) || skip.equals( \"Yes\" ) || skip.equals( \"Y\" ) || skip.equals( \"y\" );\r\n        return ! yesSkip;\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Tools.java b/Tools.java
--- a/Tools.java	
+++ b/Tools.java	
@@ -1,6 +1,6 @@
 import java.io.*;
 import java.util.Scanner;
-
+import com.qualcomm.robotcore.hardware.Gamepad;
 class Tools {
 
 
