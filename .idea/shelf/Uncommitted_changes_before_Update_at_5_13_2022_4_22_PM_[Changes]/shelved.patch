Index: Game.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.Scanner;\r\n\r\n//Main class\r\nclass Game extends Tools {\r\n\r\n    //2069 and 2077 vars (non save)\r\n    int     HP2069;\r\n    int     attackNum  = 0;\r\n    boolean attackType;\r\n    int     lastAttack = 0;\r\n    int     attackTime = 0;\r\n    int     attackStun = 0;\r\n    // Array vars (placed in Save.txt)\r\n    int     missionNum = 10;\r\n    int     HPmax      = 50;\r\n    int     cureTier   = 1;\r\n    int     level2069  = 1;\r\n    int     exp1       = 0;\r\n    int     levelR1    = 20;\r\n    int     maxHit     = 5;\r\n    //misc\r\n    int     num        = 0;\r\n    //obj\r\n    Dungeon subway     = new Dungeon( \"Underground subway\" , 20 );\r\n    Dungeon local6_11  = new Dungeon( \"Rubble filled 6-11\" , 10 );\r\n    Dungeon factory    = new Dungeon( \"Run down Factory\" , 30 );\r\n    Dungeon city       = new Dungeon( \"Rubble filled City\" , 35 );\r\n    Dungeon highway    = new Dungeon( \"Highway 101\" , 30 );\r\n\r\n    //bill gates\r\n    Attack   triSlash    = new Attack( \"Bill Gates\" , \"TRIPLE SLASH\" , 7 , 21 , 15 );\r\n    Attack   ultraSlash  = new Attack( \"Bill Gates\" , \"ULTRA SLASH\" , 10 , 20 , 20 );\r\n    Attack   laserBlast  = new Attack( \"Bill Gates\" , \"LASER BLAST\" , 5 , 30 , 30 );\r\n    Attack[] attackGates = { triSlash , ultraSlash , laserBlast };\r\n    //Elon musk\r\n    Attack   spear       = new Attack( \"Elon musk\" , \"SPEAR RUSH\" , 10 , 20 , 10 );\r\n    Attack   revenge     = new Attack( \"REVENGE OF THE SPEAR\" , 5 , 25 , 20 , 10 );\r\n    Attack   powerful    = new Attack( \"ULTRA SPEAR\" , 1 , 30 , 20 , 10 );\r\n    Attack[] attacksElon = { spear , powerful , revenge };\r\n    Phase    Elon        = new Phase( attacksElon , 500 , \"Elon Musk\" );\r\n    Phase    Gates       = new Phase( attacksElon , 500 , \"Bill Gates\" );\r\n    Phase    Jeff        = new Phase( attacksElon , 500 , \"Bill Gates\" );\r\n    Phase[]  arrTri1     = { Elon , Gates , Jeff };\r\n    Phase    ElonP       = new Phase( attacksElon , 750 , \"Elon Musk\" );\r\n    Phase    GatesP      = new Phase( attacksElon , 750 , \"Bill Gates\" );\r\n    Phase    JeffP       = new Phase( attacksElon , 750 , \"Bill Gates\" );\r\n    Phase[]  arrTri2     = { ElonP , GatesP , JeffP };\r\n    //jeff bezos\r\n    Attack   roomba      = new Attack( \"ROOMBA INVASION\" , 15 , 25 , 15 , 7 );\r\n    Attack   mech        = new Attack( \"MECH CANNON\" , 10 , 30 , 25 , 7 );\r\n    Attack   laser       = new Attack( \"DUAL LASER\" , 12 , 25 , 15 , 7 );\r\n    Attack[] attacksJeff = { roomba , mech , laser };\r\n    //Mark Zuckerberg\r\n    Attack   finalSlash  = new Attack( \"FINAL SLASH\" , 1 , 100 , 30 , 10 );\r\n    Attack   dualHit     = new Attack( \"DUAL SLASH\" , 25 , 50 , 15 , 5 );\r\n    Attack   zero        = new Attack( \"ZERO SLASH\" , 5 , 10 , 1 , 50 );\r\n    Attack[] attacksMark = { roomba , mech , laser };\r\n    Scanner  scanner     = new Scanner( System.in );\r\n    Attack   aqua        = new Attack( \"Aqua\" , 7 , 15 , 10 , 8 );\r\n    Attack   lasershot   = new Attack( \"Lasershot\" , 7 , 10 , 8 , 6 );\r\n    Attack   ember       = new Attack( \"Ember\" , 17 , 30 , 15 , 10 );\r\n\r\n    Text text = new Text( );\r\n\r\n    //Starts up 2069\r\n    public\r\n    void game ( ) {\r\n        HP2069 = HPmax;\r\n        //Runs mission forever\r\n        while ( true ) {\r\n            String choice;\r\n            sPrint( \"Type 1 -> \" + missionNum + \" to try that Mission\" );\r\n            //Tells you how to roll the gotcha\r\n            if ( missionNum > 1 ) {\r\n                sPrint( \"Type 'exp' to trade exp for new moves\" );\r\n            }\r\n            sPrint( \"which Mission would you like to try?   \" );\r\n            choice = scanner.nextLine( );\r\n            System.out.println( );\r\n            //mission 1\r\n            if ( choice.equals( \"1\" ) ) {\r\n                sPrintln( \"Mission 1: The Awakening of  The Revolution\" );\r\n                if ( skip( ) ) {\r\n                    text.mission1_1( );\r\n                    text.mission1_2( );\r\n                }\r\n                subway.start( );\r\n                while ( subway.dungeonLength > subway.amountMoved ) {\r\n                    subway.move( );\r\n                    battle( );\r\n                }\r\n\r\n\r\n                if ( skip( ) ) {\r\n                    text.mission1_3( );\r\n                }\r\n                mission1_4( );\r\n\r\n                if ( missionNum < 2 ) {\r\n                    missionNum = 2;\r\n                    sPrintln( \"MISSION 2 UNLOCKED\" );\r\n                }\r\n            }\r\n//Mission 2\r\n            if ( ( choice.equals( \"2\" ) ) && ( missionNum >= 2 ) ) {\r\n                sPrintln( \"Mission 2: First Encounters\" );\r\n\r\n                if ( skip( ) ) {\r\n                    text.mission2_1( );\r\n                }\r\n                city.start( );\r\n                while ( city.dungeonLength > city.amountMoved ) {\r\n                    city.move( );\r\n                    battle( );\r\n                }\r\n\r\n                if ( skip( ) ) {\r\n                    text.mission2_2( );\r\n                }\r\n\r\n                if ( skip( ) ) {\r\n                    text.mission2_3( );\r\n                }\r\n                if ( missionNum < 3 ) {\r\n                    missionNum = 3;\r\n                    sPrintln( \"MISSION 3 UNLOCKED\" );\r\n                }\r\n            }\r\n//Mission 3\r\n            if ( ( missionNum >= 3 ) && ( choice.equals( \"3\" ) ) ) {\r\n                sPrintln( \"MISSION 3: Rest In The Rubble\" );\r\n                if ( skip( ) ) {\r\n                    text.mission3_1( );\r\n                }\r\n                local6_11.start( );\r\n                while ( local6_11.dungeonLength > local6_11.amountMoved ) {\r\n                    local6_11.move( );\r\n                    battle( );\r\n                }\r\n\r\n                if ( skip( ) ) {\r\n                    text.mission3_2( );\r\n                }\r\n\r\n                if ( skip( ) ) {\r\n                    text.mission3_3( );\r\n                }\r\n\r\n                if ( skip( ) ) {\r\n                    text.mission3_4( );\r\n                }\r\n                if ( missionNum < 4 ) {\r\n                    missionNum = 4;\r\n                    sPrintln( \"MISSION 4 UNLOCKED\" );\r\n                }\r\n                sPrintln( \"MISSION 3 END\" );\r\n            }\r\n//Mission 4\r\n            if ( ( missionNum >= 4 ) && ( choice.equals( \"4\" ) ) ) {\r\n                sPrintln( \"Mission 4: 101 battles\" );\r\n\r\n                if ( skip( ) ) {\r\n                    text.mission4_1( );\r\n                }\r\n                highway.start( );\r\n                while ( highway.dungeonLength > highway.amountMoved ) {\r\n                    highway.move( );\r\n                    battle( );\r\n                }\r\n\r\n                if ( skip( ) ) {\r\n                    text.mission4_2( );\r\n                }\r\n                if ( missionNum < 5 ) {\r\n                    missionNum = 5;\r\n                    sPrintln( \"mission 5 UNLOCKED\" );\r\n                }\r\n            }\r\n//Mission 5\r\n            if ( ( missionNum >= 5 ) && ( choice.equals( \"5\" ) ) ) {\r\n                sPrintln( \"Mission 5: Rematch Squared\" );\r\n\r\n                if ( skip( ) ) {\r\n                    text.mission5_1( );\r\n                }\r\n                local6_11.start( );\r\n                while ( local6_11.dungeonLength > local6_11.amountMoved ) {\r\n                    local6_11.move( );\r\n                    battle( );\r\n                }\r\n\r\n                if ( skip( ) ) {\r\n                    text.mission5_2( );\r\n                }\r\n                if ( skip( ) ) {\r\n                    text.mission5_3( );\r\n                }\r\n                if ( missionNum < 6 ) {\r\n                    missionNum = 6;\r\n                    sPrintln( \"MISSION 6 UNLOCKED\" );\r\n                }\r\n            }\r\n//Mission 6\r\n            if ( ( missionNum >= 6 ) && ( choice.equals( \"6\" ) ) ) {\r\n                sPrintln( \"Mission 6: The Smoking Gun\" );\r\n                if ( skip( ) ) {\r\n                    text.mission6_1( );\r\n                }\r\n                highway.start( );\r\n                while ( highway.dungeonLength > highway.amountMoved ) {\r\n                    highway.move( );\r\n                    battle( );\r\n                }\r\n\r\n                if ( skip( ) ) {\r\n                    text.mission6_2( );\r\n                }\r\n                if ( missionNum < 7 ) {\r\n                    missionNum = 7;\r\n                    sPrintln( \"MISSION 7 UNLOCKED\" );\r\n                }\r\n            }\r\n//Mission 7\r\n            if ( ( missionNum >= 7 ) && ( choice.equals( \"7\" ) ) ) {\r\n                sPrintln( \"Mission 7: The Rules Of The Roomba\" );\r\n\r\n                if ( skip( ) ) {\r\n                    text.mission7_1( );\r\n                }\r\n                factory.start( );\r\n                while ( factory.dungeonLength > factory.amountMoved ) {\r\n                    factory.move( );\r\n                    battle( );\r\n                }\r\n                Emmi giga = new Emmi( level2069 );\r\n                battle( );\r\n\r\n                if ( skip( ) ) {\r\n                    text.mission7_2( );\r\n                }\r\n                if ( missionNum < 8 ) {\r\n                    missionNum = 8;\r\n                    sPrintln( \"MISSION 8 UNLOCKED\" );\r\n                }\r\n            }\r\n//Mission 8\r\n            if ( ( missionNum >= 8 ) && ( choice.equals( \"8\" ) ) ) {\r\n                sPrintln( \"MISSION 8 When I Step off\" );\r\n                text.mission8_1( );\r\n                highway.start( );\r\n                while ( highway.dungeonLength > highway.amountMoved ) {\r\n                    highway.move( );\r\n                    battle( );\r\n                }\r\n                Emmi giga = new Emmi( level2069 );\r\n                battle( );\r\n\r\n                text.mission8_2( );\r\n                if ( missionNum < 9 ) {\r\n                    missionNum = 9;\r\n                    sPrintln( \"MISSION 9 UNLOCKED\" );\r\n                }\r\n            }\r\n//Mission 9\r\n            if ( ( missionNum >= 9 ) && ( choice.equals( \"9\" ) ) ) {\r\n                sPrintln( \"Mission 9: Face-Off On The Grand Tower\" );\r\n                Emmi giga = new Emmi( level2069 );\r\n                battle( );\r\n\r\n                text.mission9_1( );\r\n                text.mission9_2( );\r\n                if ( missionNum < 9 ) {\r\n                    missionNum = 9;\r\n                    sPrintln( \"MISSION 9 UNLOCKED\" );\r\n                }\r\n            }\r\n//Mission 10\r\n            if ( ( missionNum >= 10 ) && ( choice.equals( \"10\" ) ) ) {\r\n                sPrintln( \"mission 10: 2 Sides Of The Same Coin\" );\r\n                text.mission10_1( );\r\n                text.mission10_2( );\r\n                if ( missionNum < 11 ) {\r\n                    missionNum = 11;\r\n                    sPrintln( \"MISSION 11 UNLOCKED\" );\r\n                }\r\n            }\r\n\r\n//Gotcha system\r\n            if ( ( choice.equals( \"exp\" ) ) && ( missionNum > 1 ) ) {\r\n                pull( );\r\n            }\r\n            Object[] arrList = new Object[]{ missionNum , HPmax , level2069 , levelR1 , exp1 , aqua.attackTier ,\r\n                                             lasershot.attackTier , cureTier , ember.attackTier , maxHit };\r\n\r\n\r\n            Edit( \"Save.txt\" , arrList );\r\n        }\r\n\r\n    }\r\n    //embers method\r\n\r\n    //shows you what attacks you can use\r\n    public\r\n    void attack ( ) {\r\n\r\n        attackNum = 0;\r\n        sPrint( \"2069's turn\" );\r\n\r\n        sPrint( \"1: \" + aqua.attackName );\r\n\r\n        sPrint( \"2: \" + lasershot.attackName );\r\n\r\n        sPrint( \"3: Cure\" );\r\n\r\n        sPrint( \"4: \" + ember.attackName );\r\n        System.out.println( );\r\n        //This while loop just\r\n        long start_Time = System.currentTimeMillis( );\r\n\r\n        sPrint( \"Which attack? (1-4)   \" );\r\n        attackNum = scanner.nextInt( );\r\n\r\n        System.out.println( );\r\n\r\n        sPrint( \"Out Power or Out Speed (Power=false)(Speed=true)\" );\r\n        attackType = scanner.nextBoolean( );\r\n        System.out.println( );\r\n\r\n        long end_Time = System.currentTimeMillis( );\r\n        attackTime = ( int ) ( ( end_Time - start_Time ) / 1000 );\r\n        if ( attackNum == 1 ) {\r\n            attackTime += aqua.getSpeed( attackType );\r\n            attackStun = aqua.getStun( attackType );\r\n        }\r\n        if ( attackNum == 2 ) {\r\n            attackTime += lasershot.getSpeed( attackType );\r\n            attackStun = lasershot.getStun( attackType );\r\n\r\n        }\r\n        if ( attackNum == 4 ) {\r\n            attackTime += ember.getSpeed( attackType );\r\n            attackStun = ember.getStun( attackType );\r\n        }\r\n        if ( attackNum == 3 ) {\r\n            attackStun = 0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @return how much damage you did\r\n     */\r\n    public\r\n    int choseAttack ( double power ) {\r\n        if ( attackNum == 1 ) {\r\n            num = aqua.attack( power , attackType );\r\n        }\r\n        if ( attackNum == 2 ) {\r\n            num = lasershot.attack( power , attackType );\r\n        }\r\n        if ( attackNum == 3 ) {\r\n            cure( power );\r\n        }\r\n        if ( attackNum == 4 ) {\r\n            num = ember.attack( power , attackType );\r\n        }\r\n        lastAttack = attackNum;\r\n        return num;\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    //cure method\r\n    public\r\n    void cure ( double power ) {\r\n        if ( attackType ) {\r\n            sPrintln( \"dodging Cure\" );\r\n            num = ( int ) ( random( cureTier * 2 , cureTier * 5 ) * power ) * 2;\r\n        }\r\n        else {\r\n            sPrintln( \"Cure shield\" );\r\n            num = ( int ) ( random( cureTier * 5 , cureTier * 20 ) * power );\r\n        }\r\n        HP2069 += num;\r\n        sPrintln( \"2069's heal \" + num + \" damage\" );\r\n    }\r\n\r\n    //2077's code\r\n\r\n    /**\r\n     * @return 2077s damage dealt\r\n     */\r\n    public\r\n    int attack2 ( ) {\r\n        sPrintln( \"2077's turn\" );\r\n\r\n//starts quicktime event\r\n        long startTime = System.currentTimeMillis( );\r\n        int  i         = 0;\r\n        while ( startTime + 10000 > System.currentTimeMillis( ) ) {\r\n            sPrint( \"Type Kick\" );\r\n            while ( startTime + 10000 > System.currentTimeMillis( ) ) {\r\n                if ( scanner.nextLine( ).equals( \"Kick\" ) ) {\r\n                    break;\r\n                }\r\n\r\n            }\r\n            sPrint( \"Type Punch\" );\r\n            while ( startTime + 10000 > System.currentTimeMillis( ) ) {\r\n                if ( scanner.nextLine( ).equals( \"Punch\" ) ) {\r\n                    break;\r\n                }\r\n\r\n            }\r\n            i++;\r\n\r\n        }\r\n        num = i * maxHit;\r\n        sPrintln( \"2077 Deals \" + num + \" Damage\" );\r\n        return num;\r\n\r\n    }\r\n\r\n\r\n    public\r\n    void mission1_4 ( ) {\r\n        sPrintln( \"old man: Thank you. I can't thank you enough. I am forever in your debt.\" );\r\n\r\n        sPrintln( \"old man: As a gift here is 100xp\" );\r\n\r\n        String choice = \"\";\r\n        //old man gift\r\n        while ( ( ! choice.equals( \"2069\" ) ) && ( ! choice.equals( \"2077\" ) ) ) {\r\n            sPrintln( \"Who will you give this exp to? (2069 or 2077)   \" );\r\n            choice = scanner.nextLine( );\r\n        }\r\n\r\n        if ( choice.equals( \"2069\" ) ) {\r\n            exp1 += 100;\r\n        }\r\n\r\n        levelUp( );\r\n\r\n        sPrintln( \"Old Man: Oh I should tell you my name. Its 2020\" );\r\n        sPrintln( \"2020: I can teach you new abilities in trade for \" );\r\n    }\r\n    //Mission Text\r\n\r\n\r\n    public\r\n    void pull ( ) {\r\n\r\n        if ( exp1 > 0 ) {\r\n            sPrintln( \"2069 exp \" + exp1 );\r\n            sPrint( \"how much exp would you like to use? \" );\r\n            num = scanner.nextInt( );\r\n            int pull_num = num / 25;\r\n            exp1 -= num;\r\n            if ( exp1 < 0 ) {\r\n                num = - exp1;\r\n            }\r\n            exp1 = 0;\r\n\r\n            while ( pull_num > 0 ) {\r\n\r\n                int[] odds = new int[]{ 1 , 1 , 1 , 1 , 2 , 2 , 2 , 3 , 3 , 3 , 4 , 4 , 5 , 6 , 7 };\r\n                int   tier = odds[ random( 0 , odds.length - 1 ) ];\r\n                if ( tier == 1 ) {\r\n                    HPmax += 2;\r\n                    sPrintln( \"2069's max Hp increased by 2\" );\r\n                }\r\n                else if ( ( tier == 2 ) || ( tier == 3 ) || ( tier == 4 ) || ( tier == 5 ) ) num = random( 1 , 4 );\r\n                //Ember level up\r\n                if ( num == 4 ) {\r\n                    if ( tier > ember.attackTier ) {\r\n                        sPrintln( \"ember leveled up\" );\r\n                        sPrintln( ember.attackTier + \" --> \" + tier );\r\n                        ember.setAttackTier( tier );\r\n                    }\r\n                    // Cure level up\r\n                    if ( num == 3 ) {\r\n                        if ( tier > cureTier ) {\r\n                            sPrintln( \"Cure leveled up\" );\r\n                            sPrintln( cureTier + \" -->\" + tier );\r\n                            cureTier = tier;\r\n                        }\r\n\r\n                    }\r\n                }\r\n                //aqua level up\r\n                if ( num == 1 ) {\r\n                    if ( tier > aqua.attackTier ) {\r\n                        sPrintln( \"Aqua leveled up\" );\r\n                        sPrintln( aqua.attackName + \" --> \" + tier );\r\n                        aqua.setAttackTier( tier );\r\n                    }\r\n                }\r\n                //Laser level up\r\n                if ( num == 2 ) {\r\n                    if ( tier > lasershot.attackTier ) {\r\n                        sPrintln( \"Laser leveled up\" );\r\n                        sPrintln( lasershot.attackTier + \" --> \" + tier );\r\n                        lasershot.setAttackTier( tier );\r\n\r\n                    }\r\n                }\r\n                if ( tier == 6 ) {\r\n                    maxHit += 1;\r\n                    sPrintln( \"2077's power of each hit increases by 1\" );\r\n                }\r\n                if ( tier == 7 ) {\r\n                    maxHit += 2;\r\n                    sPrintln( \"2077's power of each hit increases by 2\" );\r\n                }\r\n                sPrintln( \"roll complete\" );\r\n                pull_num -= 1;\r\n            }\r\n        }\r\n        else {\r\n            sPrintln( \"YOU NEED MORE EXP POOR PERSON\" );\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public\r\n    void levelUp ( ) {\r\n        if ( exp1 >= levelR1 ) {\r\n            sPrintln( \"LEVEL UP\" );\r\n            sPrintln( level2069 + \" --> \" + ( level2069 + 1 ) );\r\n            sPrintln( \"2069: max health +1\" );\r\n            HPmax++;\r\n            level2069++;\r\n            levelR1 = exp1 + 20 * ( level2069 * level2069 ) / 2;\r\n            sPrintln( \"2069 has\" + ( levelR1 - exp1 ) + \"exp till leveling up\" );\r\n        }\r\n\r\n\r\n    }\r\n\r\n    //fight enemies\r\n    public\r\n    void battle ( ) {\r\n        Emmi emmi = new Emmi( random( 1 , 7 ) , level2069 );\r\n        while ( emmi.emmi_HP > 0 ) {\r\n            sPrint( \"2069 health \" + HP2069 );\r\n            sPrint( emmi.emmi_type + \" health \" + emmi.emmi_HP );\r\n            System.out.println( );\r\n            if ( attackTime < emmi.emmi_attack.speed ) {\r\n                emmi.emmi_HP-=choseAttack( 1 );\r\n            }\r\n            if( attackTime > emmi.emmi_attack.speed || attackStun<random( 7,15 )){\r\n                HP2069-=emmi.emmi_attack.attack();\r\n            }\r\n            restart( );\r\n        }\r\n\r\n        levelUp( );\r\n\r\n    }\r\n\r\n    //Create a giga mech\r\n\r\n    //Game Over\r\n    public\r\n    void restart ( ) {\r\n        if ( HP2069 < 0 ) {\r\n            sPrintln( \"The world around you begins to fade to black\" );\r\n            sPrintln( \"???: Welcome back to this world of nothingness \" );\r\n            sPrintln( \"2069: no...\" );\r\n            sPrintln( \"???: Your only hope now is to turn back the hands of time\" );\r\n            sPrintln( \"2077:I see nothing wrong with that\" );\r\n            sPrintln( \"2069: Please help us\" );\r\n            String choice = \"How are you doing\";\r\n            while ( ! choice.equals( \"START\" ) ) {\r\n                sPrint( \"Type ¨START¨ to continue     \" );\r\n                choice = scanner.nextLine( );\r\n            }\r\n            System.out.println( );\r\n\r\n            game( );\r\n        }\r\n\r\n    }\r\n\r\n\r\n    //uses READ to update save\r\n    public\r\n    void grabSave ( ) {\r\n        Object[] Save = Read( \"Save.txt\" );\r\n\r\n        for ( int s = 0 ; s < Save.length ; s++ ) {\r\n\r\n            if ( Save[ s ] != null ) {\r\n                int val = Integer.parseInt( Save[ s ].toString( ) );\r\n\r\n\r\n                if ( s == 0 ) {\r\n                    missionNum = val;\r\n                }\r\n                if ( s == 1 ) {\r\n                    HPmax = val;\r\n                }\r\n                if ( s == 2 ) {\r\n                    level2069 = val;\r\n                }\r\n                if ( s == 3 ) {\r\n                    levelR1 = val;\r\n                }\r\n                if ( s == 4 ) {\r\n                    exp1 = val;\r\n                }\r\n                if ( s == 5 ) {\r\n                    aqua.attackTier = val;\r\n                }\r\n                if ( s == 6 ) {\r\n                    lasershot.attackTier = val;\r\n                }\r\n                if ( s == 7 ) {\r\n                    cureTier = val;\r\n                }\r\n                if ( s == 8 ) {\r\n                    ember.attackTier = val;\r\n                }\r\n                if ( s == 9 ) {\r\n                    maxHit = val;\r\n                }\r\n            }\r\n        }\r\n        sPrint( \"Save grabbed\" );\r\n\r\n    }\r\n\r\n    public\r\n    void bossFight ( Boss boss ) {\r\n\r\n        while ( ! boss.differntPhases.isEmpty( ) ) {\r\n\r\n            boss.checkArray( );\r\n            Phase current = boss.differntPhases.get( 0 );\r\n            sPrint( current.name + \"'s Health \" + current.getHP( ) );\r\n            sPrintln( \"2069's Health \" + HP2069 );\r\n\r\n            current.pickAttack( );\r\n            Attack bossAttack = current.attacks[ current.curAttack ];\r\n            attack( );\r\n            if ( attackTime <= bossAttack.speed ) {\r\n                current.loseHP( choseAttack( 1 ) );\r\n            }\r\n            if ( attackStun < random( 8,20 ) || attackTime < bossAttack.speed ) {\r\n                HP2069 -= bossAttack.attack( );\r\n            }\r\n\r\n\r\n        }\r\n        exp1 += 100;\r\n        levelUp( );\r\n    }\r\n//don't pass this comment\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Game.java b/Game.java
--- a/Game.java	(revision c972656c279a0dc7dc4c4f6818a9dc4a4a1b219e)
+++ b/Game.java	(date 1652484178142)
@@ -233,7 +233,7 @@
                     battle( );
                 }
                 Emmi giga = new Emmi( level2069 );
-                battle( );
+                battle( giga );
 
                 if ( skip( ) ) {
                     text.mission7_2( );
@@ -554,6 +554,24 @@
             }
             restart( );
         }
+
+        levelUp( );
+
+    }
+    public
+    void battle ( Emmi emmi ) {
+        while ( emmi.emmi_HP > 0 ) {
+            sPrint( "2069 health " + HP2069 );
+            sPrint( emmi.emmi_type + " health " + emmi.emmi_HP );
+            System.out.println( );
+            if ( attackTime < emmi.emmi_attack.speed ) {
+                emmi.emmi_HP-=choseAttack( 1 );
+            }
+            if( attackTime > emmi.emmi_attack.speed || attackStun<random( 7,15 )){
+                HP2069-=emmi.emmi_attack.attack();
+            }
+            restart( );
+        }
 
         levelUp( );
 
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_17\" project-jdk-name=\"openjdk-18\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision c972656c279a0dc7dc4c4f6818a9dc4a4a1b219e)
+++ b/.idea/misc.xml	(date 1652484178189)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" project-jdk-name="openjdk-18" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_18" default="true" project-jdk-name="openjdk-18" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
