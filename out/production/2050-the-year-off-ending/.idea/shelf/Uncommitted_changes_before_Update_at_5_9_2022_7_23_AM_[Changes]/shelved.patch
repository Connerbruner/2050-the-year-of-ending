Index: Game.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.Scanner;\r\n\r\n//Main class\r\nclass Game extends Tools {\r\n\r\n    //2069 and 2077 vars (non save)\r\n    int HP1;\r\n    int attack_num = 0;\r\n    boolean attack_type;\r\n    int last_attack = 0;\r\n    int attackTime = 0;\r\n    int attackStun = 0;\r\n    // Array vars (placed in Save.txt)\r\n    int missionNum = 10;\r\n    int HP1m = 50;\r\n    int cure_tier = 1;\r\n    int level1 = 1;\r\n    int exp1 = 0;\r\n    int levelR1 = 20;\r\n    int cureTier = 1;\r\n    int max_hit = 5;\r\n\r\n    //misc\r\n    int num = 0;\r\n    int move_tier = 0;\r\n    //obj\r\n    Dungeon subway = new Dungeon(\"Underground subway\", 20);\r\n    Dungeon local6_11 = new Dungeon(\"Rubble filled 6-11\", 10);\r\n    Dungeon factory = new Dungeon(\"Run down Factory\", 30);\r\n    Dungeon city = new Dungeon(\"Rubble filled City\", 35);\r\n    Dungeon highway = new Dungeon(\"Highway 101\", 30);\r\n\r\n\r\n    Scanner scanner = new Scanner(System.in);\r\n    Attack aqua = new Attack(\"Aqua\", 7, 15, 7, 8);\r\n    Attack lasershot = new Attack(\"Lasershot\", 7, 10, 5, 6);\r\n    Attack ember = new Attack(\"Ember\", 17, 30, 10, 10);\r\n    Text text = new Text();\r\n\r\n    //Starts up 2069\r\n    public void game() {\r\n        HP1 = HP1m;\r\n        //Runs mission forever\r\n        while (true) {\r\n            String choice;\r\n            sPrint(\"Type 1 -> \" + missionNum + \" to try that Mission\");\r\n            //Tells you how to roll the gotcha\r\n            if (missionNum > 1) {\r\n                sPrint(\"Type 'exp' to trade exp for new moves\");\r\n            }\r\n            sPrint(\"which Mission would you like to try?   \");\r\n            choice = scanner.nextLine();\r\n            System.out.println();\r\n            //mission 1\r\n            if (choice.equals(\"1\")) {\r\n                sPrintln(\"Mission 1: The Awakening of  The Revolution\");\r\n                if (skip()) {\r\n                    text.mission1_1();\r\n                    text.mission1_2();\r\n                }\r\n                subway.start();\r\n                while (subway.dungeonLength > subway.amountMoved) {\r\n                    subway.move();\r\n                    battle();\r\n                }\r\n\r\n\r\n                if (skip()) {\r\n                    text.mission1_3();\r\n                }\r\n                mission1_4();\r\n\r\n                if (missionNum < 2) {\r\n                    missionNum = 2;\r\n                    sPrintln(\"MISSION 2 UNLOCKED\");\r\n                }\r\n            }\r\n//Mission 2\r\n            if ((choice.equals(\"2\")) && (missionNum >= 2)) {\r\n                sPrintln(\"Mission 2: First Encounters\");\r\n\r\n                if (skip()) {\r\n                    text.mission2_1();\r\n                }\r\n                city.start();\r\n                while (city.dungeonLength > city.amountMoved) {\r\n                    city.move();\r\n                    battle();\r\n                }\r\n\r\n                if (skip()) {\r\n                    text.mission2_2();\r\n                }\r\n\r\n                if (skip()) {\r\n                    text.mission2_3();\r\n                }\r\n                if (missionNum < 3) {\r\n                    missionNum = 3;\r\n                    sPrintln(\"MISSION 3 UNLOCKED\");\r\n                }\r\n            }\r\n//Mission 3\r\n            if ((missionNum >= 3) && (choice.equals(\"3\"))) {\r\n                sPrintln(\"MISSION 3: Rest In The Rubble\");\r\n                if (skip()) {\r\n                    text.mission3_1();\r\n                }\r\n                local6_11.start();\r\n                while (local6_11.dungeonLength > local6_11.amountMoved) {\r\n                    local6_11.move();\r\n                    battle();\r\n                }\r\n\r\n                if (skip()) {\r\n                    text.mission3_2();\r\n                }\r\n\r\n                if (skip()) {\r\n                    text.mission3_3();\r\n                }\r\n\r\n                if (skip()) {\r\n                    text.mission3_4();\r\n                }\r\n                if (missionNum < 4) {\r\n                    missionNum = 4;\r\n                    sPrintln(\"MISSION 4 UNLOCKED\");\r\n                }\r\n                sPrintln(\"MISSION 3 END\");\r\n            }\r\n//Mission 4\r\n            if ((missionNum >= 4) && (choice.equals(\"4\"))) {\r\n                sPrintln(\"Mission 4: 101 battles\");\r\n\r\n                if (skip()) {\r\n                    text.mission4_1();\r\n                }\r\n                highway.start();\r\n                while (highway.dungeonLength > highway.amountMoved) {\r\n                    highway.move();\r\n                    battle();\r\n                }\r\n\r\n                if (skip()) {\r\n                    text.mission4_2();\r\n                }\r\n                if (missionNum < 5) {\r\n                    missionNum = 5;\r\n                    sPrintln(\"mission 5 UNLOCKED\");\r\n                }\r\n            }\r\n//Mission 5\r\n            if ((missionNum >= 5) && (choice.equals(\"5\"))) {\r\n                sPrintln(\"Mission 5: Rematch Squared\");\r\n\r\n                if (skip()) {\r\n                    text.mission5_1();\r\n                }\r\n                local6_11.start();\r\n                while (local6_11.dungeonLength > local6_11.amountMoved) {\r\n                    local6_11.move();\r\n                    battle();\r\n                }\r\n\r\n                if (skip()) {\r\n                    text.mission5_2();\r\n                }\r\n                if (skip()) {\r\n                    text.mission5_3();\r\n                }\r\n                if (missionNum < 6) {\r\n                    missionNum = 6;\r\n                    sPrintln(\"MISSION 6 UNLOCKED\");\r\n                }\r\n            }\r\n//Mission 6\r\n            if ((missionNum >= 6) && (choice.equals(\"6\"))) {\r\n                sPrintln(\"Mission 6: The Smoking Gun\");\r\n                if (skip()) {\r\n                    text.mission6_1();\r\n                }\r\n                highway.start();\r\n                while (highway.dungeonLength > highway.amountMoved) {\r\n                    highway.move();\r\n                    battle();\r\n                }\r\n\r\n                if (skip()) {\r\n                    text.mission6_2();\r\n                }\r\n                if (missionNum < 7) {\r\n                    missionNum = 7;\r\n                    sPrintln(\"MISSION 7 UNLOCKED\");\r\n                }\r\n            }\r\n//Mission 7\r\n            if ((missionNum >= 7) && (choice.equals(\"7\"))) {\r\n                sPrintln(\"Mission 7: The Rules Of The Roomba\");\r\n\r\n                if (skip()) {\r\n                    text.mission7_1();\r\n                }\r\n                factory.start();\r\n                while (factory.dungeonLength > factory.amountMoved) {\r\n                    factory.move();\r\n                    battle();\r\n                }\r\n                Emmi giga = new Emmi(level1);\r\n                battle();\r\n\r\n                if (skip()) {\r\n                    text.mission7_2();\r\n                }\r\n                if (missionNum < 8) {\r\n                    missionNum = 8;\r\n                    sPrintln(\"MISSION 8 UNLOCKED\");\r\n                }\r\n            }\r\n//Mission 8\r\n            if ((missionNum >= 8) && (choice.equals(\"8\"))) {\r\n                sPrintln(\"MISSION 8 When I Step off\");\r\n                text.mission8_1();\r\n                highway.start();\r\n                while (highway.dungeonLength > highway.amountMoved) {\r\n                    highway.move();\r\n                    battle();\r\n                }\r\n                Emmi giga = new Emmi(level1);\r\n                battle();\r\n\r\n                text.mission8_2();\r\n                if (missionNum < 9) {\r\n                    missionNum = 9;\r\n                    sPrintln(\"MISSION 9 UNLOCKED\");\r\n                }\r\n            }\r\n//Mission 9\r\n            if ((missionNum >= 9) && (choice.equals(\"9\"))) {\r\n                sPrintln(\"Mission 9: Face-Off On The Grand Tower\");\r\n                Emmi giga = new Emmi(level1);\r\n                battle();\r\n\r\n                text.mission9_1();\r\n                boss_rush();\r\n                text.mission9_2();\r\n                if (missionNum < 9) {\r\n                    missionNum = 9;\r\n                    sPrintln(\"MISSION 9 UNLOCKED\");\r\n                }\r\n            }\r\n//Mission 10\r\n            if ((missionNum >= 10) && (choice.equals(\"10\"))) {\r\n                sPrintln(\"mission 10: 2 Sides Of The Same Coin\");\r\n                text.mission10_1();\r\n                Final();\r\n                text.mission10_2();\r\n                if (missionNum < 11) {\r\n                    missionNum = 11;\r\n                    sPrintln(\"MISSION 11 UNLOCKED\");\r\n                }\r\n            }\r\n\r\n//Gotcha system\r\n            if ((choice.equals(\"exp\")) && (missionNum > 1)) {\r\n                pull();\r\n            }\r\n            Object[] arrList = new Object[]{missionNum,HP1m,aqua.attackTier,lasershot.attackTier,cure_tier,ember.attackTier,level1,exp1,levelR1,max_hit};\r\n\r\n\r\n            Edit(\"Save.txt\", arrList);\r\n        }\r\n\r\n    }\r\n    //embers method\r\n\r\n    //shows you what attacks you can use\r\n    public void attack() {\r\n\r\n        attack_num = 0;\r\n        sPrint(\"2069's turn\");\r\n\r\n        sPrint(\"1: \" + aqua.attackName);\r\n\r\n        sPrint(\"2: \" + lasershot.attackName);\r\n\r\n        sPrint(\"3: Cure\");\r\n\r\n        sPrint(\"4: \" + ember.attackName);\r\n        System.out.println();\r\n        //This while loop just\r\n        long start_Time = System.currentTimeMillis();\r\n\r\n        sPrint(\"Which attack? (1-4)   \");\r\n        attack_num = scanner.nextInt();\r\n\r\n        System.out.println();\r\n\r\n        sPrint(\"Out Power or Out Speed (Power=false)(Speed=true)\");\r\n        attack_type = scanner.nextBoolean();\r\n        System.out.println();\r\n\r\n        long end_Time = System.currentTimeMillis();\r\n        attackTime = (int) ((end_Time - start_Time) / 1000);\r\n        if (attack_num == 1) {\r\n            attackTime += aqua.getSpeed(attack_type);\r\n            attackStun = aqua.getSpeed(attack_type);\r\n        }\r\n        if (attack_num == 2) {\r\n            attackTime += lasershot.getSpeed(attack_type);\r\n            attackStun = lasershot.getStun(attack_type);\r\n\r\n        }\r\n        if (attack_num == 4) {\r\n            attackTime += ember.getSpeed(attack_type);\r\n            attackStun = ember.getSpeed(attack_type);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @return how much damage you did\r\n     */\r\n    public int choseAttack(double power) {\r\n        if (attack_num == 1) {\r\n            num = aqua.attack(power, attack_type);\r\n        }\r\n        if (attack_num == 2) {\r\n            num = lasershot.attack(power, attack_type);\r\n        }\r\n        if (attack_num == 3) {\r\n            cure(power);\r\n        }\r\n        if (attack_num == 4) {\r\n            num = ember.attack(power, attack_type);\r\n        }\r\n        last_attack = attack_num;\r\n        return num;\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    //cure method\r\n    public void cure(double power) {\r\n        if (attack_type) {\r\n            sPrintln(\"dodging Cure\");\r\n            num = (int) (random(cure_tier * 2, cure_tier * 5) * power) * 2;\r\n        } else {\r\n            sPrintln(\"Cure shield\");\r\n            num = (int) (random(cure_tier * 5, cure_tier * 20) * power);\r\n        }\r\n        HP1 += num;\r\n        sPrintln(\"2069's heal \" + num + \" damage\");\r\n    }\r\n\r\n    //2077's code\r\n\r\n    /**\r\n     * @return 2077s damage dealt\r\n     */\r\n    public int attack2() {\r\n        sPrintln(\"2077's turn\");\r\n\r\n//starts quicktime event\r\n        long startTime = System.currentTimeMillis();\r\n        int i = 0;\r\n        while (startTime + 10000 > System.currentTimeMillis()) {\r\n            sPrint(\"Type Kick\");\r\n            while (startTime + 10000 > System.currentTimeMillis()) {\r\n                if (scanner.nextLine().equals(\"Kick\")) {\r\n                    break;\r\n                }\r\n\r\n            }\r\n            sPrint(\"Type Punch\");\r\n            while (startTime + 10000 > System.currentTimeMillis()) {\r\n                if (scanner.nextLine().equals(\"Punch\")) {\r\n                    break;\r\n                }\r\n\r\n            }\r\n            i++;\r\n\r\n        }\r\n        num = i * max_hit;\r\n        sPrintln(\"2077 Deals \" + num + \" Damage\");\r\n        return num;\r\n\r\n    }\r\n\r\n\r\n    public void mission1_4() {\r\n        sPrintln(\"old man: Thank you. I can't thank you enough. I am forever in your debt.\");\r\n\r\n        sPrintln(\"old man: As a gift here is 100xp\");\r\n\r\n        String choice = \"\";\r\n        //old man gift\r\n        while ((!choice.equals(\"2069\")) && (!choice.equals(\"2077\"))) {\r\n            sPrintln(\"Who will you give this exp to? (2069 or 2077)   \");\r\n            choice = scanner.nextLine();\r\n        }\r\n\r\n        if (choice.equals(\"2069\")) {\r\n            exp1 += 100;\r\n        }\r\n\r\n        levelUp();\r\n\r\n        sPrintln(\"Old Man: Oh I should tell you my name. Its 2020\");\r\n        sPrintln(\"2020: I can teach you new abilities in trade for \");\r\n    }\r\n    //Mission Text\r\n\r\n\r\n    public void pull() {\r\n\r\n        if (exp1 > 0) {\r\n            sPrintln(\"2069 exp \" + exp1);\r\n            sPrint(\"how much exp would you like to use? \");\r\n            num = scanner.nextInt();\r\n            int pull_num = num / 25;\r\n            exp1 -= num;\r\n            if (exp1 < 0) {\r\n                num = -exp1;\r\n            }\r\n            exp1 = 0;\r\n\r\n            while (pull_num > 0) {\r\n\r\n                int[] odds = new int[]{1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 5, 6, 7};\r\n                int tier = odds[random(0, odds.length - 1)];\r\n                if (tier == 1) {\r\n                    HP1m += 2;\r\n                    sPrintln(\"2069's max Hp increased by 2\");\r\n                } else if ((tier == 2) || (tier == 3) || (tier == 4) || (tier == 5)) num = random(1, 4);\r\n                //Ember level up\r\n                if (num == 4) {\r\n                    if (tier > ember.attackTier) {\r\n                        sPrintln(\"ember leveled up\");\r\n                        sPrintln(ember.attackTier + \" --> \" + tier);\r\n                        ember.setAttackTier(tier);\r\n                    }\r\n                    // Cure level up\r\n                    if (num == 3) {\r\n                        if (tier > cure_tier) {\r\n                            sPrintln(\"Cure leveled up\");\r\n                            sPrintln(cure_tier + \" -->\" + tier);\r\n                            cure_tier = tier;\r\n                        }\r\n\r\n                    }\r\n                }\r\n                //aqua level up\r\n                if (num == 1) {\r\n                    if (tier > aqua.attackTier) {\r\n                        sPrintln(\"Aqua leveled up\");\r\n                        sPrintln(aqua.attackName + \" --> \" + tier);\r\n                        aqua.setAttackTier(tier);\r\n                    }\r\n                }\r\n                //Laser level up\r\n                if (num == 2) {\r\n                    if (tier > lasershot.attackTier) {\r\n                        sPrintln(\"Laser leveled up\");\r\n                        sPrintln(lasershot.attackTier + \" --> \" + tier);\r\n                        lasershot.setAttackTier(tier);\r\n\r\n                    }\r\n                }\r\n                if (tier == 6) {\r\n                    max_hit += 1;\r\n                    sPrintln(\"2077's power of each hit increases by 1\");\r\n                }\r\n                if (tier == 7) {\r\n                    max_hit += 2;\r\n                    sPrintln(\"2077's power of each hit increases by 2\");\r\n                }\r\n                sPrintln(\"roll complete\");\r\n                pull_num -= 1;\r\n            }\r\n        } else {\r\n            sPrintln(\"YOU NEED MORE EXP POOR PERSON\");\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public void levelUp() {\r\n        if (exp1 >= levelR1) {\r\n            sPrintln(\"LEVEL UP\");\r\n            sPrintln(level1 + \" --> \" + (level1 + 1));\r\n            sPrintln(\"2069: max health +1\");\r\n            HP1m++;\r\n            level1++;\r\n            levelR1 = exp1 + 20 * (level1 * level1) / 2;\r\n            sPrintln(\"2069 has\" + (levelR1 - exp1) + \"exp till leveling up\");\r\n        }\r\n\r\n\r\n    }\r\n\r\n    //fight enemies\r\n    public void battle() {\r\n        Emmi emmi = new Emmi(random(1, 7), level1);\r\n        while (emmi.emmi_HP > 0) {\r\n            sPrint(\"2069 health \" + HP1);\r\n            sPrint(emmi.emmi_type + \" health \" + emmi.emmi_HP);\r\n            System.out.println();\r\n            emmi.emmi_attack = 0;\r\n            emmi.emmi_prep();\r\n            attack();\r\n            num = 0;\r\n            double[] arr = emmi.attack_emmi(attackTime, attackStun);\r\n            emmi.emmi_HP -= choseAttack(arr[1]);\r\n            if (arr[1] > 0) {\r\n                emmi.emmi_HP -= attack2();\r\n            } else {\r\n                HP1 -= arr[0];\r\n            }\r\n            if (HP1 > HP1m) {\r\n                HP1 = HP1m;\r\n            }\r\n            restart();\r\n\r\n        }\r\n\r\n        levelUp();\r\n\r\n    }\r\n\r\n    //Create a giga mech\r\n\r\n    //Game Over\r\n    public void restart() {\r\n        if (HP1 < 0) {\r\n            sPrintln(\"GAME OVER\");\r\n            sPrintln(\"???: You seem to be overwhelmed\");\r\n            sPrintln(\"???: I may be able to help\");\r\n            sPrintln(\"???: Your only hope now is to turn back the hands of time\");\r\n            sPrintln(\"2077:I see nothing wrong with that\");\r\n            sPrintln(\"2069: Please help us\");\r\n            String choice = \"How are you doing\";\r\n            while (!choice.equals(\"START\")) {\r\n                sPrint(\"Type ¨START¨ to continue     \");\r\n                choice = scanner.nextLine();\r\n            }\r\n            System.out.println();\r\n\r\n            game();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    //uses READ to update save\r\n    public void grabSave() {\r\n        Object[] Save = Read(\"Save.txt\");\r\n\r\n        for (int i = 0; i < 10; i++) {\r\n            String var = Save[i].toString();\r\n            int val = 0;\r\n            if (strIsInt(var)) {\r\n                val = Integer.parseInt(var);\r\n            }\r\n            if (i == 0) {\r\n                missionNum = val;\r\n            }\r\n            if (i == 1) {\r\n                HP1m = val;\r\n            }\r\n            if (i == 2) {\r\n                level1 = val;\r\n            }\r\n            if (i == 3) {\r\n                levelR1 = val;\r\n            }\r\n            if (i == 4) {\r\n                exp1 = val;\r\n            }\r\n            if (i == 5) {\r\n                aqua.attackTier = val;\r\n            }\r\n            if (i == 6) {\r\n                lasershot.attackTier = val;\r\n            }\r\n            if (i == 7) {\r\n                cure_tier = val;\r\n            }\r\n            if (i == 8) {\r\n                ember.attackTier = val;\r\n            }\r\n            if (i == 9) {\r\n                max_hit = val;\r\n            }\r\n\r\n        }\r\n        sPrint(\"Save grabbed\");\r\n    }\r\n//don't pass this comment\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Game.java b/Game.java
--- a/Game.java	(revision baa43cc07a7d6677e8e02b8490fede8159e9bdfb)
+++ b/Game.java	(date 1652106184664)
@@ -500,6 +500,7 @@
 
     }
 
+
     //fight enemies
     public void battle() {
         Emmi emmi = new Emmi(random(1, 7), level1);
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_18\" default=\"true\" project-jdk-name=\"openjdk-18\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision baa43cc07a7d6677e8e02b8490fede8159e9bdfb)
+++ b/.idea/misc.xml	(date 1652106184867)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_18" default="true" project-jdk-name="openjdk-18" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" project-jdk-name="openjdk-18" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
